version: "3.8"

services:
  custom_composer:
    build:
      context: ./docker/composer
    restart: unless-stopped
  
  # TODO: Make custom image
  # database:
  #   build:
  #       context: ./docker/postgres
  #   # image: my-custom-postgres
  #   # container_name: my-postgres-container
  #   ports:
  #     - "5432:5432"
  #   environment:
  #     # - POSTGRES_USER=${POSTGRES_USER:-postgres} # A modifier pour inclure le .env
  #     # - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-test} # A modifier pour inclure le .env
  #     POSTGRES_DB: ${POSTGRES_DB:-main}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-mysecurepassword}
  #     POSTGRES_USER: ${POSTGRES_USER:-postgres}
  #   volumes:
  #     - db_data:/var/lib/postgresql/data
  #   networks:
  #     - justice
  #   restart: unless-stopped

  database:
    image: postgres:${POSTGRES_VERSION:-13}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ChangeMe}
      POSTGRES_USER: ${POSTGRES_USER:-symfony}
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - justice
    restart: unless-stopped

  custom_symfony:
    build:
      context: ./docker/symfony
    depends_on:
      - custom_composer
      - database
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-symfony}:${POSTGRES_PASSWORD:-ChangeMe}@database:5432/${POSTGRES_DB:-app}?serverVersion=${POSTGRES_VERSION:-13}
    # APP_ENV: dev
    # APP_DEBUG: 1
    volumes:
      - ./src:/var/www/html
    ports:
      - 8000:8000
    networks:
      - justice
    restart: unless-stopped
    
  # TODO: Make custom
  # adminer:
  #   image: adminer
  #   depends_on:
  #     - database
  #   ports:
  #     - "8080:8080"
  #   networks:
  #     - justice

volumes:
  db_data:

networks:
   justice:
    driver: bridge
